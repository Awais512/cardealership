// model Customer {
//     id            Int                 @id @default(autoincrement())
//     firstName     String              @map("first_name")
//     lastName      String              @map("last_name")
//     email         String
//     mobile        String?
//     bookingDate   DateTime?           @map("booking_date")
//     termsAccepted Boolean             @default(false) @map("terms_accepted")
//     status        CustomerStatus      @default(INTERESTED)
//     classifiedId  Int?                @map("classified_id")
//     classified    Classified?         @relation(fields: [classifiedId], references: [id], onDelete: Cascade)
//     lifeCycle     CustomerLifeCycle[]

//     createdAt DateTime @default(now()) @map("created_at")
//     updatedAt DateTime @default(now()) @map("updated_at")
// }

// enum CustomerStatus {
//     SUBSCRIBER
//     INTERESTED
//     CONTACTED
//     PURCHASED
//     COLD
// }

model Customer {
    id            Int                 @id @default(autoincrement())
    firstName     String              @map("first_name")
    lastName      String              @map("last_name")
    email         String
    mobile        String?
    bookingDate   DateTime?           @map("booking_date")
    termsAccepted Boolean             @default(false) @map("terms_accepted")
    status        CustomerStatus      @default(INTERESTED)
    classifiedId  Int?                @map("classified_id")
    classified    Classified?         @relation(fields: [classifiedId], references: [id], onDelete: Cascade)
    createdAt     DateTime            @default(now()) @map("created_at")
    updatedAt     DateTime            @updatedAt @map("updated_at")
    lifecycle     CustomerLifecycle[]

    @@map("customers")
}

enum CustomerStatus {
    SUBSCRIBER
    INTERESTED
    CONTACTED
    PURCHASED
    COLD
}
